커멘드 모드에서 x 누르면 커서를 기준으로 문자 하나 지워짐

2 + x 하면 2개 3 + x 는 3개

커서 뒤로 전부 지우고 싶다면 D <- 실무에서 많이 쓰임

밑의 라인을 위로 붙이고 싶다면 J


서버만 띄워놓고 윈도우에서 터미널을 가져올거다

https://www.chiark.greenend.org.uk/~sgtatham/putty/la.html <- 64비트용

SSH 에 접속하려고 하는데 기본 포트가 22로 되어있다.


잡다 -> 방화벽
-> 포트 -> 22번을 열어줘야함 (tcp) 추가하기


ifconfig 로 자기 ip 주소를 확인 할 수 있음



virtualBox 관리자에서 설정 -> 네트워크
-> 고급 -> 포트 포워딩

포트 포워딩이란
쁘띠에서 로컬호스트 22번을 접속하려고 할때

 - 우리는 VM 안의 Linex 22번으로 접속하려 하니 안된다.

로컬호스트 번호를 따로 전해서 그 번호에 요청을 하면
로컬 호스트에서 VM 안의 Linex 22번으로 요청하게 해준다.

그게 포트 포워딩.


포트 포워딩 안에서 + 버튼으로 추가 누르고
호스트 ip -> 127.0.0.1
호스트 포트 -> 2000
게스트 아이디 -> ifconfig 로 확인
게스트 포트 -> 22

이렇게 해주면 윈도우는 자기한테 전달오는 것들 중 2000번이 VM 꺼라는걸 알게 됨
그리고 22로 전부 보내주게 된다.

깔아놓은 puTTy 를 실행해서 

Host Nmae(or IP address
127.0.01 

바로 옆 Port 에는 2000 -> Save 해주고
Open

CentOS 에 만들어둔 아이디 ( 나같은 경우는 jun 이었음)
아이디 입력하고 비밀번호 입력하기




이렇게 서버에 따로 접근해서 하는게 일반적임

대부분의 서버실은 이렇게 운영되기 때문에




실행 후 
ls -l
입력시 나오는 디렉토리의 맨 앞에 나오는  -rw-rw-r--     의미
첫 3개는 오너가 읽고 수정할 수 있다.
두번째 3개는 오너와 같은 그룹에 있는 사람이 읽고 수정할 수 있다.
세번째 3개는 others 는 읽을수만 있다.


합계 8   <-전체 용량을 유지하는데 8byte 가 필요하다.

-rw-rw-r--. 1 jun jun 671  8월 12 16:26 aaaa
-rw-rw-r--. 1 jun jun 555  8월 13 09:28 ffff
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 공개
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 다운로드
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 문서
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 바탕화면
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 비디오
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 사진
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 서식
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 음악


cat 명령어는 특정 파일의 내용을 텍스트파일로 인코딩해서 보여준다.

cat /etc/passwd 입력시 많은 계정 정보가 나오는데

jun:x:1000:1000:BIT R44:/home/jun:/bin/bash
계정이 뭐고 어디 들어가 있고, 어느 쉘을 쓰고, 어떤 디렉토리에 들어가 있는지 알려줌
** ( 책 238p 에서 참고할 수 있음)



ls -l /etc/shadow 입력
----------. 1 root root 1285  8월 12 13:11 /etc/shadow
아무도 내용을 볼 수 없게 해놨다.


그룹정보 볼 수 있게
ls -l /etc/group 입력
-rw-r--r--. 1 root root 995  8월 13 09:03 /etc/group
오너는 보고 수정 가능

cat /etc/group 입력

끝쪽에
jun:x:1000:jun  
jun 은 1000번째 그룹에 속해있다.



책 260p 실습


디렉토리 지우기 rm

**** 파일 지우면 휴지통 없기 때문에 조심할 것

rm aaaa*   <- 앞에 aaaa 붙어있는 모든 파일을 없애버린다.

rm*    <- 현재 디렉토리 안에 있는 모든 파일을 없애버린다.

rm -i aaaa   <- 지울건지 한번 더 확인한다




cp 1111 2222 
-> 1111 을 2222로 넣어라

rmdir <- 디렉토리 지우는 명령어

** 뭔가 안에 들어있으면 지울 수 없다.
** 안에 있는걸 먼저 지우고 지워야 함

rm 1111/*   <- 1111 안에 있는 파일을 다 지워라


cp fff test01/aaaa

test01 디렉토리 안에 aaaa -> 파일을 만든다.

rm -R test01 -> 안에 파일이 있고 없고를 떠나서 다 지워버린다.



mv ffff test01 -> ffff 파일을 test01 안으로 이동시킨다.

mv test01/ffff . -> test01 디렉토리의 ffff 를 . 원래위치로

mv ffff ffff01 -> 파일 이름 바꾸기




파일 찾는거
find /etc -name passwd 
찾아라 etc의 name passwd를

최소한 어느 디렉토리 밑에 무언가가 있을때 찾는게 좋을거다(범위가 좁혀져있을때)


vim kkkk  파일을 하나 만들고
control + z 로 나와버렸을때

rm .kkkk.swp 로 지워버린다고 해도

다시 ps -ef | grep vim 을 검색하면

좀비로 지워지지 않고 살아있다. 
이걸 없애는 방법은

jun          20411          16212  0 16:37 pts/1    00:00:00 vim kkkk
소유자    해당파일번호

kill -9 해당파일번호 를 입력하면 완전히 다 없어진다.



which
시스템 path 에 설정되어 있는것만 뒤져서 찾는다. (find 와 다른점)

which vi
alias vi='vim'
        /usr/bin/vim


echo $PATH
/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/jun/.local/bin:/home/jun/bin

변수의 값을 다 적어줘라

주로 명령어를 찾을때 사용한다.




ls -l > list.txt    list.txt 파일을 만든다.

ls -l
합계 12
-rw-rw-r--. 1 jun jun   8  8월 13 10:45 aaaa
-rw-rw-r--. 1 jun jun  11  8월 13 10:44 ffff01
-rw-rw-r--. 1 jun jun 588  8월 13 11:15 list.txt
drwxrwxr-x. 2 jun jun   6  8월 13 10:49 test01
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 공개
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 다운로드
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 문서
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 바탕화면
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 비디오
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 사진
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 서식
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 음악

cat list.txt     열어서 확인

합계 8
-rw-rw-r--. 1 jun jun  8  8월 13 10:45 aaaa
-rw-rw-r--. 1 jun jun 11  8월 13 10:44 ffff01
-rw-rw-r--. 1 jun jun  0  8월 13 11:15 list.txt
drwxrwxr-x. 2 jun jun  6  8월 13 10:49 test01
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 공개
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 다운로드
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 문서
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 바탕화면
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 비디오
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 사진
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 서식
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 음악

ls -l >> list.txt       
리다이렉션 (append) 밑에 전체 파일을 하나 붙여줘라 
없으면 하나 만들어서 넣어라.

cat list.txt

합계 8
-rw-rw-r--. 1 jun jun  8  8월 13 10:45 aaaa
-rw-rw-r--. 1 jun jun 11  8월 13 10:44 ffff01
-rw-rw-r--. 1 jun jun  0  8월 13 11:15 list.txt
drwxrwxr-x. 2 jun jun  6  8월 13 10:49 test01
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 공개
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 다운로드
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 문서
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 바탕화면
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 비디오
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 사진
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 서식
drwxr-xr-x. 2 jun jun  6  8월 12 11:42 음악
합계 12
-rw-rw-r--. 1 jun jun   8  8월 13 10:45 aaaa
-rw-rw-r--. 1 jun jun  11  8월 13 10:44 ffff01
-rw-rw-r--. 1 jun jun 588  8월 13 11:15 list.txt
drwxrwxr-x. 2 jun jun   6  8월 13 10:49 test01
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 공개
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 다운로드
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 문서
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 바탕화면
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 비디오
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 사진
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 서식
drwxr-xr-x. 2 jun jun   6  8월 12 11:42 음악






vi input.txt   예) ffff01 라고 적고 저장하고 나온다.
cat < input.txt  
cat input.txt 	입력하면

vi input 에 적어둔 텍스트(ffff01)가
cat 으로 나오게 된다.

같은 값으로 나오는데, 입력한 인자를 갖고 온다.


sql 데이터를 D 드라이브 원래 리눅스 download 파일에 넣고
ls -l /mnt/share/download/hr_main.sql
경로설정                       파일이름

으로 불러올 수 있다.

vi 로는 파일에 들어가서 봐볼 수 있다

grep 해당단어 / 경로 / 파일이름 입력시
-> 해당단어가 있는 곳을 전부 가져온다.


grep -E 명령어로는 정규표현식(레귤러 익스프레션)을 표현할 수 있다.

grep -E '[0-9]{2}/[0-9]{2}/[0-9]{2}' /mnt/share/download/hr_main.sql

이와 같은 방식으로 표현할 수 있음





파이프 라인 - 앞쪽에서 찾은 내용을 뒤로 보내준다.
cat /mnt/share/download/hr_main.sql|grep REM


왜 파이프라인을 쓰는가.


cat /etc/passwd|grep jun
전체 파일 중에서 grep 뒤에 있는 내용만 관련해서 찾아준다.


ex) 내 디렉토리 밑에 파일이 많은데, 그 관련 파일만 보자
디렉토리 안에 test 라는 이름이 들어간것만 보자 
ls -l | grep test*


그룹별 권한

su <- 유저대체

su 입력 후 비밀번호
나갈때는 exit



su -  입력// 같은 결과


su , su -  다른점은 권한이 필요할때와 권한 자체를 바꾸고자 할때 달라진다.
su = 권한 필요
su - = 권한 자체를 바꾸고자 할때

루트 권한으로 무언가를 하겠다
sudo 


vi /etc/bashrc 입력하고 안에 들어가서

[ "$PS1" = "\\s-\\v\\\$ " ] && PS1="[\u@\h \W]\\$ "
찾아서 "ayy:e .bashrc 들어가서 "ap 로 바꾸고 뒤에 W 를 w 로 바꿔준다.
- 쉘의 기본설정을 바꿀 수 있게  해줌
 - W 는 명령 프롬프트에서 나오는 경로를 맨 마지막 하나만 나오게 한다.
  예) jun@localhost /bin

 - 하지만 w 로 바꿔줌으로써 경로 전부가 나오게 한다
  예) jun@localhost /usr/bin


이 상태에서 :q 로 나와 source .bashrc (=. .bashrc)로 저장을 한다.
				  같은 의미
확인은 vi .bashrc 로 가능


vi .bashrc 들어가서
alias rm="rm-i"     <- 알리아스로 rm-숫자 에 대해서 경고를 줄 수 있게 명령어를 생성

저장하고 나와서

. .bashrc 로 그 상태를 저장해놓고

무언가를 지우기 위해 rm 파일이름 을 적으면
정말로 지우겠냐고 물어본다.

한번쯤 더 물어봄으로써 보안성을 높여줌

하지만 만약 파일이름01, 02 ... 100 으로 수가 많을때는
하나를 지울때 전부 다 지우겠느냐는 100번의 물음이 오기 때문에 
그럴때는

rm -f ffff* 라고 하면 force 효과로 전부 지워줄 수 있음




-rw-rw-r-- 권한 설정하기

chmod u+rwx input.txt
ls -l input.txt
-rwxrw-r--. 1 jun jun 7  8월 13 11:25 input.txt

chmod u-x input.txt
ls -l input.txt
-rw-rw-r--. 1 jun jun 7  8월 13 11:25 input.txt


r = read
w = write
x = 실행 excute





du -sh ./*
디스크 사용량 보기

df -h /
디스크 현재 사용량




vi .vimrc 파일을 새로 만들어서

set cindent          # c에서 나온 인덴테이션 적용
set ts=4	            # 탭으로 한번에 움직이는건 4칸 (원래는 8칸)
set shiftwidth=4    # 인덴테이션 할때 자동으로 어떻게 해줄거냐
 		# 예를 들어 for 문같은 경우 밑으로 내려갈때 자동으로 들여쓰기 기능 해줌
set expandtab       # 탭을 누르는 순간 스페이스로 바꿔서 들어가라



컬러 테마
ls -l /usr/share/vim/vim74/colors



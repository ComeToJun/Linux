운영체제

하드웨어) 운영체제)) 응용프로그램))) 사용자  
- 사용자의 특성 목적을 달성하게 하는 소프트웨어

windows 95 초창기에는 엄청 불안해서 95번은 깔아봐야 제대로 할 수 있다는 말이 있을정도였음
 - 대신 사이즈도 작아서 깔았다 지우기 편함

유닉스
어셈블러로 개발
대부분 기계어

처음에는 호환이 안되니 너무 불편해서 새로운 언어를 개발하고자 함
대부분을 C언어로 변환

유닉스를 C로 코딩하기 위하여 C언어를 만들었다고 볼 수 있다.
유닉스와 C 는 한몸이라고 생각할 것.
즉, 찰떡궁합. 유닉스 자체가 C언어로 만들어졌으니

그 이후부터 porting(다른 기종의 컴퓨터로 소프트웨어를 옮기기, 즉, 이식)하기 쉬우니 보급이 빨라지기 시작함

돈이 될거 같으니 ibm hp 과 같은 큰 기업에서 투자하기 시작하면서
커스터마이징이나 업그레이드를 시작함

문제가 생김
대기업이 상업적으로 이용하려 하다보니 무료로 배포하지 않음

기존 버전에서 업그레이드를 시키고 공유하질 않으니, 학교나 연구소쪽에서는 불만이 생기기 시작함
그래서 저렴한 비용으로 누구나 사용할 수 있게 만들자고 해서 
UC berkley 캘리포니아 주립대학 버클리 캠퍼스(당시 소프트웨어분야에서 선도 대학)에서 
유닉스를 다시 재코딩하기 시작함

그래서 저렴한 가격으로 제공하기 시작
학교 등에서 부담없이 사용하기 시작함

그게
BSD
버클리 소프트웨어 이스크립션 berkley software discription

공짜로 만들 수 있게도 만들었는데 solaris 라는걸로 만들어서 공급하기 시작
각각의 학교들에 무료로 배포하기 시작 (나중을 위하여)

스티븐잡스가 애플에서 잘리고 Next 컴퓨터를 만들었는데, 이것도 BSD 뿌리로 만들었던건데
다시 애플에서 잡스를 부를때 NextStep 이라는 기반이 되는 Os 를 가져가서 지금의 MacOs 를 만들었다.




결과적으로 서로가 경쟁하면서 버전업을 해서 발전을 만들어냄



유닉스의 특징
멀티유저 - 다중 사용자 지원
멀티태스킹 
계층적 디렉토리
높은 보안성
유연한 네트워크
C언어로 높은 이식성


유닉스 시스템 구조

커널 
하드웨어와 인터페이스하는 운영체제의 핵심
파일 관리를 담당하는 파일
-> 이런것들을 커널에 만들어놓음

쉘
사용자와 직접 대화
명령어 해독기
-> 유저와 상호적으로 대화할 수 있게 해주는 것

유틸리티 


모노리틱 커널 (유닉스) (Mac) (전부 다 있다)
시스템콜과 같은 연산이 같은 메모리 공간에서 실행
내구 구현이 쉽고 높은 효율성 -> 다 있으니까
코드 수정이 어렵고 문제 발생시 전체 시스템에 영향

마이크로 커널 (핵심부분만 남겨놓고 나머지는 나누어 놓았음) <- (윈도우즈)
커널은 하드웨어에 대한 간단한 추상화 계층만 제공
다른 서비스는 서버의 형태로 제공




리눅스

공개로 개발되는 유닉스 운영체제
인터넷 상의 자발적인 프로그래머에 의해 공동 개발

연구용으로 미닉스라는 제품이 나옴

핀란드의 Linus B. Torvalds 에 의해 개발
왜냐하면, 
사용하다보니 제약이 많아 귀찮음
그래서 개발하기 시작ㅡㅡ

리눅스 커널을 개발해서 무료로 공개해버림
Linus 와 Unix 의 합성어 Linux



처음엔 핀란드에서만 시작되었던게 미국으로 건너가
리차드 스톨만과 만나게 됨 ( Free software 강조 -> 
			정당한 대가를 받고 파는건 맞지만, 마음대로 바꿔서 재판매도 가능하다.)


리처드 스톨만은 거의 모든 강연에서 Free Software에서 
Free는 자유(Freedom 혹은 Liberty)의 Free를 의미하는 것이지 공짜 맥주(Free Beer)를 의미하는 것이 
아니라고 설명하고 있다. 판매와는 별개로 모든 소프트웨어의 사용자들에게 자유를 존중해야한다는 것이 핵심이다.
 상업성 자체는 문제가 되지 않지만 그 상업성을 위해 사용자의 자유를 침해해서는 안된다.

그가 흔히 사용하는 요리 레시피 책에 비유하면, 한 요리사가 자신의 요리 레시피 책을 대가를 받고 팔 수 있지만,
 그렇게 해서 누군가가 그의 레시피를 배웠다면, 그 누군가는 자신이 배운 레시피에 무언가를 더 첨가하거나, 
세부적인 요리법을 바꿀 자유도 있고, 또 다른 제 3자에게 원본의 레시피 
또는 자신이 수정한 레시피를 공유하거나, 대가를 받고 팔 자유가 있다.



GNU = GNU is not Unix

모든 것들을 g 를 앞에 붙여 새롭게 만들어 공짜로 소스들을 제공하면서 퍼주기 시작
하지만 커널을 만들지는 못함 (유틸리티만 만들었음)



결국 둘이 만나 합쳐져서 Linux 라는 os 를 만들어 발표

스톨만은 Linux 에 Gnu 가 하나도 들어가지 않아 불만이었다고 함



커널은 Lins 가 만들고 스톨만재단에서 주변 유틸리티를 만듬 





리눅스는 유닉스 호환 OS 시작
처음에는 믿지 못하겠다는 생각에 사용되지 않았지만,
지금은 많은 업그레이드를 통해 사람들이 이용하고 있음


초창기에는 유닉스 카피캣 정도로만 생각했으나,
지금은 국제적으로 인정받고 있음. 

유닉스를 보면서 코드를 만들었기 때문에 유닉스와 호환됨



시간이 지나면서 새로운 것들이 나오기 시작한다.
단, 동일한 커널을 쓰지만, 패키지가 다름

https://futurist.se/gldt/

GUN/LINUX DISTRIBUTION TIMELINE 12.10

SVG

전체 가문의 연결도 를 볼 수 있음

최근 가장 많이 사용되는건 Ubuntu와 CentOS

RedHat 에서 RHEL 을 내서 상용화를 시작, 리눅스는 무료 배포, AS 로 돈을 번다.

우리는 
CentOS 를 사용할건데, 이건 RedHat 에서 나옴
왜냐하면, 돈을 벌면서 인건비를 줄여야 하니, 최선버전이나 업데이트를 할때마다 안정성을 중요시해서
미리 전부 확인을 하기 때문에, 검증을 많이 해서 더 안정적이다.

여기서 RedHat 은 AS 를 해주며 돈을 받고,
무료로 사용하자는걸로 CentOS 가 생기기 시작하고, 인기가 생기니, RedHat에서 지원을 시작함

그래서 우리는 CentOS 를 쓸거다.

최신버전은 CentOS 8



제일 좋은건 컴퓨터 두대로 리눅스버전 윈도우버전을 각각 설치하는거지만
한대로 할때는 가상머신을 설치해서 리눅스를 심을거다. (기계하나에 두개 설치)
단점 : 버벅일수밖에 없다
장점 : 자유롭게 두개를 왔다갔다 할 수 있다.

Oracle Vm virtal machine
VM ware 

대표적인 두가지 제품

초장기에는 VM ware 를 많이 씀 왜냐하면 조금 더 안정이었기 때문에,

지금은 업그레이드가 되어서 안정적이고 하드웨어 발달로 속도가 비슷해졌다.

우리는 User interact 가 더 좋은 Oracle 을 사용할거다. 초보자에게 좋음



가상머신 설치 전 두가지를 확인해야함

리눅스의 램을 얼마나 잡을 것인가
 윈도우즈의 램을 얼마인가. 를 먼저 알아야함

현재 기본이 되는 OS 는 윈도우즈 = host OS
리눅스는 손님이 되기에 = Guest OS

컴퓨터 램을 봐서 반반씩 할당하자

두번째는 하드디스크를 얼마나 줄것인가
minimum 은 20 기가

실습할때는 20기가가 부족하기 때문에 최소한 30기가.

우리는 50기가로 진행.






D 드라이브가 넉넉하니 D에 oraclevbox_jun 폴더를 만들고
그 안에 이미지가 들어갈 image 폴더를 만든다.

공유폴더를 만들어놓으면 공유가 쉽게 가능하니 vboxshare 라는 폴더도 미리 만들어두자
(바탕화면이나 한글이름으로 만들지 말기)

vitualbox 먼저 실행 Win.exe
그대로 경로 유지하고 설치 할 것

실행된거 끄고 

Oracle_VM_VirtualBox_Extension_Pack-6.1.12.vbox-extpack 실행 -> 동의하고 전부 실행

새로 만들기 -> CentOS7 이름으로 만들기 -> 머신폴더를 아까 만들어두었던 image 폴더로 정하기
-> 다음 누르기 -> guest os 의 메모리를 얼마나 잡을 것인가 ( 램의 반정도 준다)
-> 하드디스크 용량 정하기 -> 만들기 누르고 VDI (다른 가상머신에서도 열게 할거면 VHD 나 VMDK 정하기)
-> 물리적 하드 드라이브에 저장 ( 동적할당 : 메모리 필요할때마다 잡아먹으면서 정해둔 용량까지 가게 한다.)
    즉, 초기할당할때 시간이 별로 안들지만, 고정크기로 해놓으면, 쓸때 속도는 빠르지만, 포맷을 항상 50기가 
    전부 해야하니 전체 포맷시 시간이 조금 더 걸릴수도 있다.
-> 그다지 큰 차이가 없으니, 동적할당으로 한다(구글링으로 해보면, 용량 늘릴 수 있는 방법이 따로 있음)
-> 파일 위치 및 크기( 최소30, 우리는 실습할거니 50으로 잡고 만들기 클릭)
-> 만들어짐

지금까지 한게 리눅스를 사기 위해 컴퓨터를 하나 새로 산거임( 메모리 8기가에 50기가짜리 )

본격적으로 설치하기 전에 세팅해야 할게 있다.



CentOS7 설정에 들어가자(고급에 있는 Snapshot 은 작업시 그대로 찍히는 모든 것을 보고 싶다 할때 들어가는 폴더)
-> 고급탭에서 클립보드 공유 양방향으로 해주기 ( 게스트와 호스트 가 공유하겠다 즉, 복사 붙이기가 가능해진다.)
-> 왼쪽탭에서 시스템 클릭 -> 포인팅 장치(PS/2마우스=옛날 동그란 연결잭이니 반드시 USB태블릿으로 바꿀 것)
-> 확인 클릭! ( 마우스 꼭 확인하자 )


저장소 [광학 드라이브] 비어있음에서 마우스 우측버튼 -> 디스크 이미지 선택
-> CentOS-7-x86_64-DVD-2003.iso (예전에 받아둔 파일) 선택 (즉, 실행을 위한 CD 를 넣었다고 생각하면 됨)
-> 저장소 밑에 4.45기가 짜리가 들어갔다고 생각하면 됨
-> 시작 
-> Install CentOS7 선택
-> welcome to centos 7 까지 나와야함
-> 한국어 찾아서 계속 진행
-> 설치 요약 -> 느낌표 있는건 한번 들어가봐줄것 -> 건드릴건 없다 -> 완료 -> 느낌표 없어짐
-> 소프트웨어 선택(최소설치: X 윈도우 못씀) -> GNOME 데스크탑 선택
-> 백업 클라이언트, 스마트 카드 제외 전부 선택 (필요에 따라 선택과 취소해서 사용가능)
-> 네트워크 및 호스트명 -> 이더넷 켜줌 -> 게스트OS 의 ip주소 10.0.2.15 ( 환경에 따라 다를 수 있음)
-> 완료 -> 설치시작
-> 비밀번호는 기억할만한걸로 설정(비밀번호 까먹으면 다시 까는 방법밖엔 없음)
-> 사용자 계정 만들기
-> 사용자 이름 대문자로 하지 말것
-> 이 사용자를 관리자로 합니다 클릭 -> 비밀번호 설정 후 완료


https://distrowatch.com/

각종 리눅스 배포판에 대한 여러 소식들을 알려주는 곳
오른쪽에 실시간 순위가 나오니 궁금하면 볼 수 있다.


재부팅 -> 라이센스 동의 -> 설정완료

로그인 -> 한국어 (Hangul) 선택할 것! -> 나머지는 그대로 넘어가기 (마음대로 하기)



창 크기 조절하기
-> 장치 -> 게스트 확장 CD (맨 밑에) -> 실행(기다렸다가 윈도우로 리턴)

외부 보조장치를 기억할때는 mount 라는 명령을 쓴다.
ls -l /mnt

종료 shutdown -h now


종료하고 나와서 다시 설정 누르고 공유폴더
플러스 -> D 드라이브에 만들어 놓은 vboxshare 를 선택한다. <- 윈도우즈 안의 경로
-> 자동 마운트 명령을 주면 -> 리눅스 올리면 자동으로 붙이겠다 라는 말
 ? 그런데 어디다 붙이겠느냐? -> 마운트 지점 (/mnt/share) 입력해서 새롭게 만들어 주기 <- 리눅스 안의 경로
					** 위에꺼랑은 다른 의미라고 생각할것

-> 확인

다시 리눅스 전원 켜기

터미널 켜기

ls - l /mnt/share <-허가 거부 뜨면

-> sudo usermod - G vboxsf - a jun
    권한설정하기

설정 후 shutdown -h now 로 끄고
저장소에 있는 cd 꺼내고 다시 시작하기

ls - l /mnt/share



리눅스 파일 시스템에서는
폴더 -> 디렉토리라 부름

디렉토리 구조는 트리 형태로 되어 있음


ls
갖고 있는 디렉토리들

ls -l 
디렉토리들을 좀 더 길게 나타내줘

ls -al 
전부 보여줘

ls -p
루트를 붙여서 결과값 보여줌 공개/ 다운로드/ 문서 등등

ls -p /usr/bin
개별 명령어 전부 보여줌



man ls    입력하면

manual 이 나오니 확인할 수 있다.

pwd <- 현재위치 궁금할때
/home/jun <- 루트 밑 홈 밑 준 에 있다.

cd /home <- home 으로 가라
 

자기가 어디에 있던간에 내 원래 자리로 가고 싶다
cd  <- 자기 원래 자리인 /home/jun 으로 감

cd .. <- 하나 위로 (/home)

cd <-하나 밑으로

cd ../..  <- 두개 위로

ls . <- 현재 디렉토리 내용 보여주기 . 하나가 그런 뜻


윈도우키 + 스페이스 = 한글, 영어 바꾸기


cd 공개 <- 공개 디렉토리로 가기

** 디렉토리를 바꿀때는 cd 를 이용한다.




vi  라는 에디터를 이용해보자

vi 치고 엔터 누르면 나오는 화면에서
: <- 누르고 q 누르면 나옴

: 누르고 명령어 가능

명령어 모드에서 소문자 i <- insert mode 로 변함
i 누르면 마음대로 아무거나 적을 수 있음
esc 누르면 커멘드 모드로 가게 됨

거기서 :q 누르면 나가게 되고 :q! 하면 강제로 나가게 된다.

vi ffff 치고 다시 들어가서

i 누르고 아무거나 적고
esc 누르고 :wq 누르면 저장하고 나오게 됨

나와서 ls 누르면 ffff 파일이 생긴걸 알 수 있음

다시 vi ffff 들어가면 저장했던 디렉토리로 들어가는데

커서를 옮기고 a 를 누르면 append 명령으로

커서 다음부터 명령어가 들어갈 수 있게 해준다.


i 도 가능하지만 i 는 커서가 있는 곳에서부터 명령어 입력
a 는 커서가 있는 곳 다음부터 명령어 입력 가능해짐


커서가 어디있는지 상관없이 A 는 문장의 바로 뒤로 이동시켜서 작성 가능하게 해줌

편집이 끝나면 esc 누르는 버릇을 만들자

다음 라인에서 작성하고 싶다면 A + 엔터 가능하지만,
소문자 o 를 누르면 이동한다. 

커서가 있는 위에 넣고 싶을땐 O 누르면 위로 간다.

커서가 있는 한글자만 바꾸고 싶다면 r 누르면 해당 한글자만 바뀜

내 커서가 있는 부분부터 전부 바꾼다면 R 누르면 덮어쓰기로
계속해서 전부 바꿀 수 있음




/home/user/jun hello world-123

명령어 모드에서 카피 가능,
-> 카피하고 싶은 라인에 가서 소문자 y 두번
붙이고 싶은 곳에 가서 p 누르면 커서가 있는 다음 라인에 붙음

커서가 있는 곳에서 2줄을 복사하는 것 2+y+y 
붙이고 싶은 곳에 가서 p

커서가 있는 줄부터 삭제하고 싶은 곳에서 2 d d
d 는 control x 와 같다. p 누르면 잘라서 붙일 수 있음

단어를 바꾸고 싶을때 커서가 있는곳에서
cw 누르고 단어 누르고 esc 로 빠져나오기

무슨 작업을 했던간에 최종 작업을 반복하고 싶다면
명령어 모드에서 . 찍는다.


저장하고 나가는 두번째 방법
shift z z 즉 ZZ

라인번호를 찍어주고 싶다면
명령어 에서 :se nu

라인번호 없애고 싶다면
명령어 에서 :se nonu

control g 누르면 파일명과 전체 몇줄, 전체에서 커서가 있는 곳이 몇퍼센트인지 알려줌



중간에 탭이나 스페이스를 넣었을때
파이썬처럼 들여쓰기 중요할때 
중간에 있는 공간들 확인할때

:se list

원하는게 들어있는지 아닌지 알 수 있게 해주는것(비어있는 공간이 스페이스인지 탭인지 알 수 있게 해줌)
:se nolist





만들어둔 share 폴더에 새로운 폴더를 하나 만들어보자

mkdir /mnt/share/download 
-> 탐색기에 가보면 진짜 폴더가 생김

폴더에 엑셀 파일(illustration.csv)을 넣고
리눅스 안에서 열어보자

vi /mnt/share/download/illustration.csv
(해당 파일이 폴더 안에 있어야 함)

해당 파일 명령어 모드에서

/ 이후 찾고 싶은 단어 입력하면 단어 찾아줌
n 누르면 다음 N 누르면 이전

cw 누르면 해당 단어를 바꿀 수 있게 해주고
단어 바꾸고 n 누르고 . 누르면 계속해서 해당 단어를
바꾼 단어로 바꿔준다. 반복해서 하면
해당 단어를 바꾸고 싶은 단어로 계속해서 바꿔줄수 있음



control f = 다음 페이지
control b = 이전 페이지


파일에 있는 해당 단어를 전부 바꾸고 싶은 단어로 바꾸고 싶을때
:g/Width/s//hello/g

:g/원래본문단어/s/바꾸고싶은단어/g

g = global 전체를 바꾸라는 의미



해당 단어를 전부 지우고 싶다.

:/g/hello/s///g
:/g/지우고싶은단어/s///g


라인 만들어서
2번부터 4번 라인을 지우겠다
:2,4d

방금 한 작업을 다시 돌리겠다.
u

현재커서부터 밑에까지 전부 지우겠다.
.,$d

존재하는 파일을 하나 복사하겠다.
cd 존재하는파일이름 새로운복사파일이름
cd ffff aaaa

파일저장
:w


"ayy:e ffff <- ffff 를 부르겠다.

"ap

aaaa 에 있던 파일의 커서가 있던 한줄을 카피해서 (ayy)
:e edit 으로 ffff 파일에 카피한 한줄을 넣겠다.

:e 를 누르면 ffff 파일을 불러오고

"ap 를 누르면 커서가 있던 곳 다음줄에 aaaa 에서 카피한 한줄을 가져온다.

정상적으로 종료하지 못했을때
해당 파일이 비정상적으로 남아있을 수 있다.

swp 문서를 확인해서

rm.aaaa.swp 로 해당 파일을 없애버린 후
다시 vi aaaa로 확인할 수 있다.





창을 수직으로 나눠준다. 그냥 :sp는 수평
:vsp 

control w 로 나눠진 각 창에 접근할 수 있다.

닫고싶다면 닫고싶은 차에서 q



커서 자리에서 뒤 전부를 바꿔주기
C



